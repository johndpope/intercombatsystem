// This file was auto-generated by cpptoswift.
// Do not edit this file, edit the original source file /Users/uli/Programming/intercombatsystem/intercombatsystem_cpp/intercombatsystem.hpp

#if __cplusplus
extern "C"
{
#endif /* __cplusplus */

typedef struct buff buff;

void buff_deinit( buff* _this );
buff* buff_init( int type, double amount, double max_amount, double start_angle, double relative_angle, double max_distance, double bleedthrough, bool permanent );
int buff_get_type( buff* _this );
void buff_set_type( buff* _this,  int inType );
double buff_get_bleedthrough( buff* _this );
void buff_set_bleedthrough( buff* _this,  double n );
double buff_get_amount( buff* _this );
void buff_set_amount( buff* _this,  double n );
double buff_get_max_amount( buff* _this );
void buff_set_max_amount( buff* _this,  double n );
double buff_get_start_angle( buff* _this );
void buff_set_start_angle( buff* _this,  double n );
double buff_get_relative_angle( buff* _this );
void buff_set_relative_angle( buff* _this,  double n );
double buff_get_max_distance( buff* _this );
void buff_set_max_distance( buff* _this,  double n );
bool buff_get_permanent( buff* _this );
void buff_set_permanent( buff* _this,  bool n );
typedef struct intercombatactor intercombatactor;

void intercombatactor_deinit( intercombatactor* _this );
intercombatactor* intercombatactor_init( void );
void intercombatactor_turn_by_radians( intercombatactor* _this,  double radians );
double intercombatactor_radian_angle_to_actor( intercombatactor* _this,  intercombatactor* target );
double intercombatactor_distance_to_actor( intercombatactor* _this,  intercombatactor* target );
double intercombatactor_get_angle( intercombatactor* _this );
double intercombatactor_get_x( intercombatactor* _this );
void intercombatactor_set_x( intercombatactor* _this,  double inX );
double intercombatactor_get_y( intercombatactor* _this );
void intercombatactor_set_y( intercombatactor* _this,  double inY );
double intercombatactor_get_health( intercombatactor* _this );
void intercombatactor_set_health( intercombatactor* _this,  double n );
double intercombatactor_get_value( intercombatactor* _this,  int buffType );
void intercombatactor_add_buff( intercombatactor* _this,  buff * inBuff );
bool intercombatactor_hit( intercombatactor* _this,  buff* inAttack, intercombatactor* attacker );

#if __cplusplus
}
#endif /* __cplusplus */
